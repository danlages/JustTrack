class JEEvent<*!event_name*>: NSObject, JEEvent {

    //JEEvent protocol
    let name: String = "<*event_name*>"

    var payload: [String : String]? {
        return [<*event_keyValueChain*>]
    }

    var registeredTrackers: [String] {
        return [<*event_cs_trackers_str*>]
    }

    //keys
    <*event_keysNames*>

    <*event_keysVars*>

    <*event_init*>
}


<*event_name*> = Example
<*event_keyValueChain*> = kKey1 : key1, kKey2 : key2
<*event_cs_trackers_str*> = "console", "GA"

<*event_keysNames*> =
private let kKey1 = "key1"
private let kKey2 = "key2"

<*event_keysVars*> =
let key1 : String
let key2 : String


///////
<*events_list*>
<*event_name*>
<*event_keyValueChain*>
<*event_cs_trackers_str*>
<*event_keysNames*>
<*event_keysVars*>
<*key_name*>

<*event_init*> =
init(<*event_init_params*>) {
    super.init()
    <*event_init_assigns_list*>
}

<*event_init_params*> =
test1: String,
test2: String,
test3: String
<*event_init_assigns_list*> =
self.test1 = test1
self.test2 = test2
self.test3 = test3




public class JEEventExample: NSObject, JEEvent {
    public let name: String = "example"

    public var payload: [String : String]? {
        return [
            kTest1 : test1,
            kTest2 : test2,
            kTest3 : test3
        ]
    }

    public var registeredTrackers: [String] {
        return ["console", "tracker2"]
    }

    //keys
    private let kTest1 = "test1"
    private let kTest2 = "test2"
    private let kTest3 = "test3"

    public var test1 : String = ""
    public var test2 : String = ""
    public var test3 : String = ""

    public init(test1: String,
         test2: String,
         test3: String) {
        super.init()
        self.test1 = test1
        self.test2 = test2
        self.test3 = test3
    }
}
